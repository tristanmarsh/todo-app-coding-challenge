{"version":3,"sources":["src/index.tsx","src/App.tsx","src/components/Header.tsx","src/components/List.tsx","src/components/Task.tsx","src/components/TaskEditor.tsx","src/components/ViewFilter.tsx"],"names":[],"mappings":"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","file":"","sourcesContent":["import * as React from 'react'\nimport { render } from 'react-dom'\n\nimport './styles/main.scss'\n\nimport { App } from './App'\n\nrender(<App />, document.getElementById('root'))\n","import * as React from 'react'\nimport { Header } from './components/Header'\nimport { List } from './components/List'\nimport { TaskEditor } from './components/TaskEditor'\nimport { ViewFilter } from './components/ViewFilter'\nimport { Task } from './components/Task'\n\nexport type hasState = {\n  state: IAppState\n  setState: any\n}\n\nexport interface IAppState {\n  showCompleted?: boolean\n  tasks: Task[]\n}\n\nconst seedAppState: IAppState = {\n  showCompleted: false,\n  tasks: [\n    {\n      id: 0,\n      description: 'Take a walk',\n      isComplete: false,\n    },\n    {\n      id: 1,\n      description: 'Bake a pie',\n      isComplete: false,\n    },\n    {\n      id: 2,\n      description: 'Enjoy life',\n      isComplete: false,\n    },\n  ],\n}\n\n// Query storage or provide seed\nconst localStorage = JSON.parse(window.localStorage.getItem('todoData'))\nconst initialAppState = localStorage !== null ? localStorage : seedAppState\n\nexport const App = () => {\n  const [state, updateState] = React.useState(initialAppState)\n\n  // override setState from React.useState to save all changes to localStorage\n  const setState = newState => {\n    updateState(newState)\n    window.localStorage.setItem('todoData', JSON.stringify(newState))\n  }\n\n  return (\n    <div className=\"todo-app\">\n      <Header state={state} />\n      <List state={state} setState={setState} />\n      <TaskEditor state={state} setState={setState} />\n      <ViewFilter state={state} setState={setState} />\n    </div>\n  )\n}\n","import * as React from 'react'\n\nexport const Header = ({ state }) => {\n  const count = state.tasks.filter(task => !task.isComplete).length\n\n  return (\n    <header className=\"app-header\">\n      <h2 className=\"title\">To Do App</h2>\n      <strong className=\"tasks-counter\">{count}</strong>\n    </header>\n  )\n}\n","import * as React from 'react'\nimport { Task } from './Task'\nimport { hasState } from '../App'\n\nexport const List = ({ state, setState }: hasState) => {\n  const filteredTasks = state.showCompleted\n    ? state.tasks.filter(task => task.isComplete == true)\n    : state.tasks.filter(task => task.isComplete == false)\n  return (\n    <ul className=\"list\">\n      {filteredTasks.map(task => (\n        <Task key={task.id} {...task} state={state} setState={setState} />\n      ))}\n    </ul>\n  )\n}\n","import * as React from 'react'\n\nimport { hasState } from '../App'\n\nexport interface ITaskProps extends hasState {\n  id: number\n  description: string\n  isComplete: boolean\n}\n\ntype Task = {\n  id: number\n  description: string\n  isComplete: boolean\n}\n\nexport const Task = ({\n  id,\n  description,\n  isComplete,\n  state,\n  setState,\n}: ITaskProps) => {\n  const toggleStatus = (task: Task): Task => ({\n    ...task,\n    isComplete: !isComplete,\n  })\n\n  const onTaskStatusClick = (taskId: number) => {\n    const newTasks = state.tasks.reduce(\n      (acc, task) => [...acc, task.id === taskId ? toggleStatus(task) : task],\n      []\n    )\n    setState({\n      ...state,\n      tasks: newTasks,\n    })\n  }\n\n  const onTaskDescriptionClick = (taskId: number) =>\n    console.error('Unimplemented function `onTaskDescriptionClick` invoked', {\n      id,\n    })\n\n  const onTaskOptionsClick = (taskId: number) => {\n    const confirmMessage = `Delete task '${\n      state.tasks.find(task => task.id === id).description\n    }'?`\n    window.confirm(confirmMessage) &&\n      setState({ ...state, tasks: state.tasks.filter(task => task.id !== id) })\n  }\n\n  return (\n    <li className={`task ${isComplete ? 'is-complete' : ''}`}>\n      <div onClick={e => onTaskStatusClick(id)} className=\"task-status\"></div>\n\n      <div\n        onClick={e => onTaskDescriptionClick(id)}\n        className=\"task-description\"\n      >\n        {description}\n      </div>\n\n      <div onClick={e => onTaskOptionsClick(id)} className=\"task-options\"></div>\n    </li>\n  )\n}\n","import * as React from 'react'\nimport { hasState } from '../App'\n\nexport const TaskEditor = ({ state, setState }: hasState) => {\n  const isValid = (description: string) => !!description.trim()\n  const isUnique = (description: string): boolean =>\n    !state.tasks.find(task => task.description === description)\n  const clearForm = () =>\n    ((document.forms as any).taskForm.taskEditor.value = '')\n  const focusInput = () => (document.forms as any).taskForm.taskEditor.focus()\n\n  const onFormSubmit = e => {\n    // Prevent page reload on form submission\n    e.preventDefault()\n\n    const description = (document.forms as any).taskForm.taskEditor.value\n\n    // Ignore if whitespace\n    if (!isValid(description)) {\n      return\n    }\n\n    // Notify user and reject task if not unique\n    if (!isUnique(description)) {\n      window.alert(`Duplicate Task! '${description}' is already in the list`)\n      return\n    }\n\n    // Derrive the new state containing the new task\n    setState({\n      ...state,\n      tasks: [\n        ...state.tasks,\n        {\n          id:\n            state.tasks.length > 0\n              ? Math.max(...state.tasks.map(task => task.id)) + 1\n              : 0,\n          description,\n          isComplete: false,\n        },\n      ],\n    })\n\n    clearForm()\n\n    // Lazily scroll into view\n    Array.from(document.querySelectorAll('.task')).forEach(item =>\n      item.scrollIntoViewIfNeeded()\n    )\n  }\n\n  return (\n    <div className=\"task-editor\">\n      <div className=\"task-editor-icon\" onClick={() => focusInput()} />\n      <form name=\"taskForm\" action={void 0} onSubmit={e => onFormSubmit(e)}>\n        <input type=\"text\" name=\"taskEditor\" />\n      </form>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { hasState } from '../App'\n\nexport const ViewFilter = ({ state, setState }: hasState) => {\n  const toggleView = () => {\n    const newState = { ...state, showCompleted: !state.showCompleted }\n    setState(newState)\n  }\n\n  return (\n    <nav className=\"navigation\">\n      <button type=\"button\" onClick={() => toggleView()}>\n        Show {state.showCompleted ? 'Incomplete' : 'Completed'}\n      </button>\n    </nav>\n  )\n}\n"]}